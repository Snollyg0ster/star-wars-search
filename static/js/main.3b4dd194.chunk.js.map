{"version":3,"sources":["input.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["options","arr","array","map","item","push","name","value","title","label","style","display","justifyContent","color","type","renderItem","Complete","props","dropdownClassName","dropdownStyle","borderColor","borderWidth","borderStyle","borderRadius","backgroundColor","defaultActiveFirstOption","dropdownMatchSelectWidth","id","onChange","text","onSelect","option","size","placeholder","dataTypes","Search","useState","inputText","setInputText","setArr","currentObject","setCurrentObject","fetchData","url","a","fetch","res","json","data","console","error","getTypeData","formattedData","results","newArr","typeData","length","forEach","resetArr","document","addEventListener","e","target","getElementById","useEffect","updateArr","arrItem","find","onClick","Object","keys","key","class","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b4dd194.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"antd/dist/antd.dark.css\";\r\nimport \"./index.css\";\r\nimport { Input, AutoComplete /*, Dropdown, Select*/ } from \"antd\";\r\n//import { UserOutlined } from \"@ant-design/icons\";\r\n\r\nconst renderTitle = (title) => {\r\n  return <span>{title}</span>;\r\n};\r\n\r\nconst renderItem = (item) => {\r\n  let name;\r\n\r\n  if (item.name == null) {\r\n    name = item.title;\r\n  } else {\r\n    name = item.name;\r\n  }\r\n\r\n  return {\r\n    value: name,\r\n    item: item,\r\n    label: (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {name}\r\n        <span style={{ color: \"white\" }}>{item.type}</span>\r\n      </div>\r\n    ),\r\n  };\r\n};\r\n\r\nconst options = (arr) => {\r\n  if (arr !== 0) {\r\n    const array = [];\r\n    arr.map((item) => array.push(renderItem(item)));\r\n\r\n    return [\r\n      {\r\n        label: renderTitle(\"searching results\"),\r\n        options: array,\r\n      },\r\n    ];\r\n  } else {\r\n    return [{}];\r\n  }\r\n};\r\n\r\nconst Complete = (props) => (\r\n  <AutoComplete\r\n    dropdownClassName=\"certain-category-search-dropdown\"\r\n    dropdownStyle={{\r\n      borderColor: \"rgb(228, 228, 16)\",\r\n      borderWidth: \"2px\",\r\n      borderStyle: \"solid\",\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"black\",\r\n    }}\r\n    defaultActiveFirstOption={true}\r\n    dropdownMatchSelectWidth={400}\r\n    id=\"input\"\r\n    options={options(props.arr)}\r\n    onChange={(text) => props.onChange(text)}\r\n    onSelect={(option) => props.onSelect(option)}\r\n  >\r\n    <Input size=\"large\" placeholder=\"input here\" />\r\n  </AutoComplete>\r\n);\r\n\r\nexport default Complete;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Complete from \"./input\";\r\n\r\nconst dataTypes = [\r\n  \"films\",\r\n  \"people\",\r\n  \"planets\",\r\n  \"species\",\r\n  \"starships\",\r\n  \"vehicles\",\r\n];\r\n\r\nfunction Search() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [arr, setArr] = useState([]);\r\n  const [currentObject, setCurrentObject] = useState(null);\r\n\r\n  async function fetchData(url) {\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (e) {\r\n      console.error(\"error in fetchDate\", e);\r\n    }\r\n  }\r\n\r\n  async function getTypeData(url, type) {\r\n    const data = await fetchData(url);\r\n\r\n    const formattedData = data.results.map((item) => ({ ...item, type }));\r\n\r\n    return formattedData;\r\n  }\r\n\r\n  async function updateArr() {\r\n    const newArr = [];\r\n\r\n    for (const type of dataTypes) {\r\n      const url = \"https://swapi.dev/api/\" + type + \"/?search=\" + inputText;\r\n\r\n      const typeData = await getTypeData(url, type);\r\n\r\n      if (typeData.length > 0) {\r\n        typeData.forEach((item) => {\r\n          newArr.push(item);\r\n\r\n          return item;\r\n        });\r\n      }\r\n    }\r\n\r\n    setArr(newArr);\r\n  }\r\n\r\n  function resetArr() {\r\n    setArr([]);\r\n  }\r\n\r\n  document.addEventListener(\"click\", (e) => {\r\n    const target = e.target;\r\n    const input = document.getElementById(\"input\");\r\n    if (target === input) resetCurrentObject();\r\n  });\r\n\r\n  function resetCurrentObject() {\r\n    setCurrentObject(\"\");\r\n  }\r\n\r\n  function optionOnSelect(option) {\r\n    const arrItem = arr.find((item) => item.name === option);\r\n\r\n    setCurrentObject(arrItem);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputText.length > 2) {\r\n      updateArr();\r\n    } else {\r\n      if (inputText.length < 3) {\r\n        resetArr();\r\n      }\r\n    }\r\n    /* eslint-disable-next-line */\r\n  }, [inputText]);\r\n\r\n  useEffect(() => {\r\n    if (inputText.length === 0 && arr.length > 0) {\r\n      resetArr();\r\n    }\r\n    /* eslint-disable-next-line */\r\n  }, [arr]);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"inputGroup\">\r\n        <Complete\r\n          onChange={(text) => setInputText(text)}\r\n          onSelect={optionOnSelect}\r\n          arr={arr}\r\n        />\r\n        <button id=\"searchButton\" onClick={() => setCurrentObject(arr[0])}>\r\n          search\r\n        </button>{\" \"}\r\n      </div>\r\n      {currentObject ? (\r\n        <div id=\"resultTableBorders\">\r\n          <div id=\"resultTable\">\r\n            {Object.keys(currentObject).map((key) => {\r\n              return (\r\n                <p key={key} class=\"infoRow\">\r\n                  {key}: {currentObject[key]}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport ApiCall from \"./Search\";\n\nfunction App() {\n  document.title = \"Star wars search\";\n  return (\n    <div className=\"App\">\n      <div id=\"titleGroup\">\n        <h1 id=\"smallTitle\">search engine</h1>\n        <h1 id=\"title\">Star Wars </h1>\n      </div>\n      <ApiCall />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./default.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}